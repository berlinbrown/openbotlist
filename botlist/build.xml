<?xml version="1.0" encoding="UTF-8"?>
<!-- ****************************************************** -->
<!-- Copyright (c) 2006 - Berlin Brown -->
<!-- Ant script that is located in the Tomcat webapp directory and -->
<!-- writes classes to this particular directory -->
<!-- Description: Testing ruby with with spring web application -->
<!-- Date: 11/1/2006 -->
<!-- Updates: -->
<!-- + 3/10/2008 - updated core libraries to most recent versions, spring, etc --> 
<!-- + 3/14/2008 - Moved classpath to property file -->
<!-- ****************************************************** -->
<project name="OpenBotlist Main Build File" default="package" basedir=".">

	<property file="build.properties" />        
    <property name="build.dir"            value="${basedir}/build"/>
    <property name="build.classes.dir"    value="${basedir}/build/classes"/>
    <property name="src.dir"              value="${basedir}/src"/>
	<property name="scala.src.dir"        value="${basedir}/apps_src/scala"/>	
    <property name="lib.dir"              value="${basedir}/WEB-INF/lib"/>
	<property name="lib.runtime.dir"      value="${basedir}/runtime-lib"/>
	<property name="lib.servlet.dir"      value="${basedir}/servlet-lib"/>	
	<property file="${basedir}/build_classpath.properties" />	
	
    <!-- Web Apps Directory -->
    <property name="default.tomcat.webapps" value="${tomcat.home}/webapps" />
	    
	<!-- Import the classpath usage and variable names -->
	<import file="${basedir}/build_classpath_paths.xml" />
	
	<target name="help" description="Initialization">
	        <tstamp/>
	        <echo message="Running with Tomcat Home=${tomcat.home}" />	
			<echo message="Classpth properties, lib.dir=${classpath.lib.dir}" />
			<echo>
 Additional Targets and Usage:
 -----------------
 scala.compile - to compile the scala source, use this target.  
                 To build the  complete release package, 
                 you must compile this manually.
 full.deploy -   Compile the source, including scala source.
                 Deploy to the application server.

</echo>
	    	<fail unless="classpath.include">Error loading build_classpath.property file.  Make sure it exists.</fail>
	</target>	
	
    <!-- Target: Prepare -->
    <target name="prepare" depends="help">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
    </target>

    <!-- Target: Compile -->
    <target name="compile" depends="prepare">
        <javac deprecation="true"
                target="1.5"
                srcdir="${src.dir}"
                destdir="${build.classes.dir}"
                includes="**/*.java">
            <classpath refid="classpath"/>
            <compilerarg value="-Xlint" />
        </javac>
    </target>

	
    <!-- **************************************** -->
    <!-- Add support for scala compiles, used with liftweb apps -->
    <!-- Date Created: 12/29/2007 -->
    <!-- **************************************** -->
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath refid="classpath.scala" />
    </taskdef>
	
	<!-- Target: Compile Scala Source -->
	<target name="scala.compile" depends="compile">
		<scalac srcdir="${scala.src.dir}" 
				destdir="${build.classes.dir}" 
		  		classpathref="classpath.scala" force="never">
		    <include name="**/*.scala"/>
		</scalac>
	</target>
	
    <!-- Target: Build -->
    <target name="package" depends="prepare">
    </target>
      
    <!-- Target: Tomcat.deploy -->
    <target name="tomcat.deploy" depends="package">
        <!-- Copy WEB-INF Classes Directory -->
        <!-- With this build configuration, this assumes that the build script
                    is located with the webapp directory -->
        <copy todir="${basedir}/WEB-INF/classes">
            <fileset dir="${basedir}/build/classes">
                <include name="**"/>
            </fileset>
        </copy>
        <!-- End of Target Tomcat Deploy -->
    </target>
	
	<target name="full.deploy" depends="package, compile, scala.compile, tomcat.deploy">
	</target>

    <!-- Jar/War the Web Archive File -->
    <!-- Note: using jar task because we are working out of a web-application -->
    <!-- directory. -->
    <target name="jar.webapp" depends="package">
        <fail unless="appname.war">APPNAME.WAR must be set, see the build.properties file</fail>
        <delete>        
            <fileset dir="${build.dir}">
                <include name="**/*.zip"/>
                <include name="**/*.jar"/>
                <include name="**/*.war"/>
            </fileset>
        </delete>
        <jar destfile="${basedir}/build/${appname.war}.war" basedir="${basedir}" />
    </target>
    
    <!-- Build beans jar -->
    <target name="jar.botlist.beans" depends="compile">
        <jar jarfile="${build.dir}/botlistbeans.jar">
            <fileset dir="${basedir}/WEB-INF/classes" >
                <include name="org/spirit/bean/impl/**/*.class"/>
            </fileset>
        </jar>
    </target>
    
    <!-- Zip the development code base -->
    <target name="zip.codebase" depends="clean,prepare">
        <fail unless="appname.war">APPNAME.WAR must be set, see the build.properties file</fail>
        <zip destfile="${basedir}/build/${appname.war}_src.zip" basedir="${basedir}" />
    </target>
    
    <!-- Generate Version -->
    <target name="generate.vers" depends="package">
        <exec executable="${basedir}/getsvnversion.sh" spawn="false" failonerror="false"></exec>
        <java classname="org.spirit.util.version.BotListVersionReader">
            <classpath refid="classpath" />
            <classpath>
                <pathelement location="${basedir}" />
            </classpath>
            <arg value="-f" />
            <arg value="${basedir}/WEB-INF/classes/version.properties"/>            
        </java>
    </target>

    <!-- Main Clean -->
    <target name="clean">
        <delete dir="${build.dir}" />
        <delete>
        	<fileset dir="${basedir}/WEB-INF/tools">
        		<!-- Delete compiled python files, make sure not to remove your *.py files -->
        		<include name="**/*.pyc" />
    		</fileset>
            <fileset dir="${basedir}/WEB-INF/classes">
                <include name="**/*.class" />
				<include name="**/*.log" />
                <exclude name="**/*.properties" />
                <exclude name="**/*.xml" />
            </fileset>
			<!-- Clean files against entire project.  NOTE: this can be a dangerous task -->
			<fileset dir="${basedir}">
				<include name="**/*.log" />
                <include name="**/Thumbs.db" />
            </fileset>
        </delete>
    </target>
    <!-- End of Main Clean -->

    <!-- Clean the logs -->
    <target name="clean.logs">
        <!-- Check if the ant property setting has been set -->
        <fail unless="tomcat.home">TOMCAT_HOME must be set, see the build.properties file</fail>
        <delete>
            <!-- Remove all the log files including those without log extension -->
            <fileset dir="${tomcat.home}/logs">
                <include name="**"/>
            </fileset>
        </delete>
    </target>

</project>
<!-- End of the File -->
